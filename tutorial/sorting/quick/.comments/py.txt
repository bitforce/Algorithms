===============================================================================
                            ALGORITHM DOCUMENTATION
===============================================================================
A.1
===
The partition method takes the last element as the pivot and places the pivot 
element at its correct position in the sorted array, and places elements 
smaller than it to the left of it and all other elements to the right.

A.2
===
A pivot index is created and set as to the last element. Then a current index 
is created and set to the first element.

A.3
===
Index variable `j` is set to the low element and traverses than array and if 
the element at `j` is less than the pivot, then the current index `i` is 
incremented and is swapped with `j` so that an order exists.

A.4
===
The second swap which switches the second to last and last element.

A.5
===
The sort method is a recursive method that takes advantage of the partition 
method using a conditional to check whether the  values of left (low) 
partition are actually smaller than the values of the right (high) 
partition. These partitions get naturally put back together the 
recursive returns.

A.6
===
The parameters are check to see if the low variable is actually smaller 
than the high variable, which if so, a partition is created using said 
variables and two recursive sorts are called to then sort each 
partition into smaller pieces and then sort those smaller 
partitions.

A.7
===
A helper method that minimizes parameter size and assists in the calling 
of said method.
===============================================================================
